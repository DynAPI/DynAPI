#!/usr/bin/env bash
set -e
cd "$(realpath "$(dirname "$(realpath "$0")")/..")"

# create build directory
mkdir -p "build/"
[ -d "build/dynapi/" ] && rm -rf "build/dynapi/"

# copy source code
echo "Copying code..."
cp -Lr "src/dynapi/" "build/dynapi/"
cp README.md "build/dynapi/"

# cleanup of copied
find build/dynapi -type d -iname __pycache__ -prune -exec rm -rf "{}" \;
[ -f "build/dynapi/api.conf" ] && rm "build/dynapi/api.conf"
mkdir -p "build/dynapi/plugins/"

# install dependencies into (new) copied source-code directory
echo "Installing dependencies..."
python3 -m pip install -qqq -r "requirements-names.txt" -t "build/dynapi/" --compile --disable-pip-version-check
for dep_file in build/dynapi/plugins/*/dependencies; do
  if [ ! -f "$dep_file" ]; then
    continue
  fi
  plugin_name="$(basename "$(dirname "$dep_file")")"
  echo "Installing dependencies for plugin ${plugin_name}..."
  python3 -m pip install -qqq -r "$dep_file" -t "build/dynapi/" --compile --disable-pip-version-check
done
dist_infos=$(find build/dynapi/*.dist-info -maxdepth 0 -printf '%f\n')
mkdir -p build/dynapi/dist-info
mv build/dynapi/*.dist-info build/dynapi/dist-info/

echo "Installing scripts..."
echo "DynAPI v$(grep -Pzo '(?s)__version__ = "\K.*?(?=")' "src/dynapi/__version__.py" | tr -d '\0') build
Python: $(python3 -V | awk '{print $2}')
pip:    $(pip3 --version | awk '{print $2}')
Dependencies Installed:
$(echo "$dist_infos" | sed 's/\.dist-info$//' | awk -F- '{print $1,$2}' | column -t | sed 's/^/ - /')
Plugins-Folder:
$(find build/dynapi/plugins/* -maxdepth 0 -printf '%f\n' | sed 's/^/ - /')
OS Detail:
$(sed 's/^/ /' /etc/os-release)
" > "build/dynapi/meta.info"
cp "scripts/extra/dynapi.run.sh" "build/dynapi/dynapi.run"
chmod +x "build/dynapi/dynapi.run"

echo "Build successful"
